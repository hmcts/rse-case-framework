plugins {
	id 'java'
	id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'com.revolut.jooq-docker' version '0.3.4'
	id 'groovy'
}

group = 'uk.gov.hmcts.ccf'
version = '0.0.1-SNAPSHOT'
def springBootVersion = '2.3.4.RELEASE'

repositories {
	jcenter()
}

sourceSets {
	integrationTest {
		compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
	}
}

dependencies {
	implementation platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
	compileOnly 'org.projectlombok:lombok:1.18.14'
	annotationProcessor 'org.projectlombok:lombok:1.18.12'

	testCompileOnly 'org.projectlombok:lombok:1.18.12'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'

	implementation 'org.jooq:jooq:3.13.5'
	// For jooq
	jdbc 'org.postgresql:postgresql:42.2.17'

	compile("org.springframework.boot:spring-boot-starter-jdbc")
	compile("org.springframework.boot:spring-boot-starter-data-jpa")

	implementation group: 'com.google.guava', name: 'guava', version: '29.0-jre'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-test'
	implementation 'net.jodah:typetools:0.6.2'
	implementation group: 'org.apache.commons', name: 'commons-csv', version: '1.8'

	developmentOnly "org.springframework.boot:spring-boot-devtools:${springBootVersion}"
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	integrationTestCompile "org.testcontainers:postgresql:1.14.3"
	testCompile group: 'org.assertj', name: 'assertj-core', version: '3.17.2'
	testCompile group: 'org.spockframework', name: 'spock-core', version: '1.3-groovy-2.5'
	testCompile group: 'org.spockframework', name: 'spock-spring', version: '1.3-groovy-2.5'
	testImplementation 'org.codehaus.groovy:groovy-all:2.5.8'
}

compileJava {
	options.compilerArgs << "-Werror"
}

configurations.integrationTestImplementation.extendsFrom(configurations.testImplementation)
configurations.integrationTestRuntimeOnly.extendsFrom(configurations.runtimeOnly)

task integrationTest(type: Test) {
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
}

integrationTest.mustRunAfter test

check {
	dependsOn(tasks.integrationTest)
}

bootRun {
	args '--generate-data=true', '--database-host=localhost'
	if (project.hasProperty('args')) {
		args project.args.split(',')
	}
}

